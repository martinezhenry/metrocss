/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.metroccs.modelos;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/**
 *
 * @author HMARTINEZ
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    int llegada = 10;
    MonitorTrenes monitorTrenes;
    boolean detenerSimulacion = false;
    String serialTren;

    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 132, Short.MAX_VALUE)
        );

        jLabel1.setText("Tablero");

        jButton1.setText("add Tren");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("delete Train");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Next Estation");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Cambiar Direc");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Simulacion");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Detener Simulacion");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("tablero");
        jPanel1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        String ubi;
        int destino;
        int espera;
        if (serialTren == null) {

            serialTren = "3";
            ubi = "10";
            destino = 0;
            espera = 0;

        } else if (serialTren.equals("3")) {

            serialTren = "4";
            ubi = "50";
            destino = 0;
            espera = 0;

        } else {

            serialTren = "5";
            ubi = "90";
            destino = 90;
            espera = 1000;

        }

        Tren tren3 = new Tren();
        tren3.setUbicacion(ubi);
        tren3.setSerialId(serialTren);
        tren3.setEstado("Detenido");
        tren3.setVelocidad(0);
        tren3.setDireccion("+");
        tren3.setCantidadVagones(6);
        tren3.setDestino(destino);
        tren3.setEspera(espera);

        MonitorTrenes.getInstancia().addTren(tren3);

        MonitorTrenes.getInstancia().setAccion(1);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        this.getMonitorTrenes().deleteTren("3");

        for (Tren t : this.getMonitorTrenes().getListaTrenes()) {

            System.out.println("SerialId" + t.getSerialId());

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        if (llegada == 10) {

            llegada = 50;

        } else {

            llegada = 10;

        }

        Thread th = new Thread(new Runnable() {

            @Override
            public void run() {
                MonitorTrenes.getInstancia().moverTren("3", llegada);

            }
        });

        th.start();


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        // TODO add your handling code here:
        MonitorTrenes.getInstancia().cambiarDireccion("3");

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        detenerSimulacion = false;
        MonitorTrenes.getInstancia().setDetenerTrenes(detenerSimulacion);

      //  Tren tren = t;
        List<Tren> lista = ((List) ((ArrayList) MonitorTrenes.getInstancia().getListaTrenes()).clone());
        Thread t = new Thread();

        Thread tt = new Thread(new Runnable() {

            @Override
            public void run() {
                Thread t = null;

                while (!detenerSimulacion) {

                    for (Tren tren : MonitorTrenes.getInstancia().getListaTrenes()) {

                        if (tren.getEstado().equals("Detenido")) {

                            for (Estacion estacion : MonitorEstaciones.getInstancia().getListaEstaciones()) {
                                /*
                                 if (t == null){
                
                                 t = new Thread(new Runnable() {

                                 @Override
                                 public void run() {
                                 System.out.println("Moviendo tren: " + tren.getSerialId());
                                 if (MonitorTrenes.getInstancia().moverTren(tren.getSerialId(), Integer.parseInt(MonitorEstaciones.getInstancia().getEstacion(estacion.getCodSigEstacionDer()).getUbicacion()))) {
                                        
                                 }

                                 }
                                 });
                
                                 }*/

                                if (tren.getUbicacion().equals(estacion.getUbicacion())) {

                                    if (estacion.getCodSigEstacionDer() != 0 && tren.getDireccion().equals("+")) {

                                        tren.setDireccion("+");

                                    } else if (estacion.getCodSigEstacionIzq() != 0 && tren.getDireccion().equals("-")) {

                                        tren.setDireccion("-");

                                    } else if (estacion.getCodSigEstacionDer() == 0 && tren.getDireccion().equals("+")) {

                                        if (!estacion.isAndenIzqOcupado()){
                                            tren.setDireccion("-");
                                        } else {
                                        
                                            System.out.println("OCUPADDDDDDDDDDD");
                                        }

                                    } else if (estacion.getCodSigEstacionIzq() == 0 && tren.getDireccion().equals("-")) {
                                        if (!estacion.isAndenDerOcupado()){
                                        tren.setDireccion("+");
                                        } 
                                    }

                                    System.out.println("Tren " + tren.getSerialId() + " ubicado en estacion: " + estacion.getNombre());
                                    if (tren.getDireccion().equals("+")
                                            && estacion.getCodSigEstacionDer() != 0
                                            && Integer.parseInt(MonitorEstaciones.getInstancia().getEstacion(estacion.getCodSigEstacionDer()).getUbicacion()) > Integer.parseInt(estacion.getUbicacion())) {

                                        t = new Thread(new Runnable() {

                                            @Override
                                            public void run() {
                                                //  System.out.println("Moviendo tren: " + tren.getSerialId());
                                                if (MonitorTrenes.getInstancia().moverTren(tren.getSerialId(), Integer.parseInt(MonitorEstaciones.getInstancia().getEstacion(estacion.getCodSigEstacionDer()).getUbicacion()))) {

                                                }

                                            }
                                        });
                                        
                                        

                                        t.start();

                                    }
                                    /***************************************************************/

                                    if (tren.getDireccion().equals("-")
                                            && estacion.getCodSigEstacionIzq() != 0
                                            && Integer.parseInt(MonitorEstaciones.getInstancia().getEstacion(estacion.getCodSigEstacionIzq()).getUbicacion()) < Integer.parseInt(estacion.getUbicacion())) {

                                        t = new Thread(new Runnable() {

                                            @Override
                                            public void run() {
                                                // System.out.println("IF 2 Moviendo tren: " + tren.getSerialId());
                                                if (MonitorTrenes.getInstancia().moverTren(tren.getSerialId(), Integer.parseInt(MonitorEstaciones.getInstancia().getEstacion(estacion.getCodSigEstacionIzq()).getUbicacion()))) {

                                                }

                                            }
                                        });

                                        t.start();
                                    }

                                } //else {
/*
                                    t = new Thread(new Runnable() {

                                        @Override
                                        public void run() {

                                            //   System.out.println("Moviendo tren: " + tren.getSerialId());
                                            if (MonitorTrenes.getInstancia().moverTren(tren.getSerialId(), tren.getDestino())) {

                                            }

                                        }
                                    });

                                    if (tren.getDestino() != 0) {
                                        t.start();
                                    }*/
                             //   }

                            }

                        }

         //   MonitorTrenes.getInstancia().setListaTrenes(lista);
                    }
                }

            }
        });

        tt.start();


    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:

        detenerSimulacion = true;
        MonitorTrenes.getInstancia().setDetenerTrenes(detenerSimulacion);

    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    public JPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    public MonitorTrenes getMonitorTrenes() {
        return monitorTrenes;
    }

    public void setMonitorTrenes(MonitorTrenes monitorTrenes) {
        this.monitorTrenes = monitorTrenes;
    }

}
